<?php

error_reporting(E_ALL);
ini_set("display_errors", 1);
require 'uploding.php';


if (isset($_POST['upload'])) {
// create a whitelist of the extensions
    $allowedExts = array('gif', 'jpeg', 'jpg', 'png');
// obtain the extension of the uploaded file and storeit in a variable
    $explode = explode('.', $_FILES['file']['name']);
    $extension = end($explode);

//echo finfo_file(finfo_open(FILEINFO_MIME_TYPE), $_FILES['file']['tmp_name']);
// validate the content-type header of uploaded file
    if ((($_FILES['file']['type'] == 'image/gif')
            || ($_FILES['file']['type'] == 'image/jpeg')
            || ($_FILES['file']['type'] == 'image/jpg')
            || ($_FILES['file']['type'] == 'image/pjpeg')
            || ($_FILES['file']['type'] == 'image/x-png')
            || ($_FILES['file']['type'] == 'image/png'))
        && ($_FILES['file']['size'] < 1000000000)
// validate file extension
        && in_array($extension, $allowedExts)
// check file content and derive the actual content-type, the validate it with the allowed content-types
        && (finfo_file(finfo_open(FILEINFO_MIME_TYPE), $_FILES['file']['tmp_name']) == 'image/gif'
            || finfo_file(finfo_open(FILEINFO_MIME_TYPE), $_FILES['file']['tmp_name']) == 'image/jpeg'
            || finfo_file(finfo_open(FILEINFO_MIME_TYPE), $_FILES['file']['tmp_name']) == 'image/jpg'
            || finfo_file(finfo_open(FILEINFO_MIME_TYPE), $_FILES['file']['tmp_name']) == 'image/pjpeg'
            || finfo_file(finfo_open(FILEINFO_MIME_TYPE), $_FILES['file']['tmp_name']) == 'image/x-png'
            || finfo_file(finfo_open(FILEINFO_MIME_TYPE), $_FILES['file']['tmp_name']) == 'image/png')
    ) {

        if ($_FILES['file']['error'] > 0) {
            echo 'Error: ' . $_FILES['file']['error'] . '<br>';
        } else {
            echo '3';
// store the file in a temporary storage first
            echo 'Upload: ' . $_FILES['file']['name'] . '<br>';
            echo 'Type: ' . $_FILES['file']['type'] . '<br>';
            echo 'Size: ' . ($_FILES['file']['size'] / 1024) . ' kB<br>';
            echo 'Stored in: ' . $_FILES['file']['tmp_name'] . '<br>';
        }
        if (file_exists('upload/' . $_FILES['file']['name'])) {
            echo $_FILES['file']['name'] . ' already exists. ';
        } else {

// move file to a permanent storage in the file system
            /* change the filename with a customized filename.
            Here the filename is generated by the combination of system time and hostname of the users’ system */
            move_uploaded_file($_FILES['file']['tmp_name'], "upload/" . time() .  "idUsers=" . "." . $extension);
            echo 'Permanently Stored in: ' . 'upload/' . $_FILES['file']['name'];
            $uploding = new uploding();
            $uploding->setNamefile( time() .  "idUsers=" . "." . $extension);
            $uploding->Add($uploding);
        }
    } else {

        echo 'Invalid file';
    }

}

?>


<html>
<head>
    <title>File Uploading Form</title>
</head>
<body>
<h3 align='center'>File Upload:</h3>
<p align='center'>Select a file to upload:</p>
<!– encryption type is added to tell that the form input is a file –>
<div align='center'>
    <form action='upload.php' method='post' enctype='multipart/form-data'>
        <input type='file' name='file' size='50'/>
        <p></p>
        <input type='submit' name="upload" value='Upload File'/>
    </form>
    <div>
</body>
</html>

